<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: .NET | Shirohida]]></title>
  <link href="http://claymore.github.com/blog/categories/-net/atom.xml" rel="self"/>
  <link href="http://claymore.github.com/"/>
  <updated>2012-11-05T01:03:08+04:00</updated>
  <id>http://claymore.github.com/</id>
  <author>
    <name><![CDATA[Alexey Bobyakov]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Context menu for column headers of .NET ListView]]></title>
    <link href="http://claymore.github.com/blog/2008/07/13/context-menu-for-column-headers-of-net-listview/"/>
    <updated>2008-07-13T16:53:00+04:00</updated>
    <id>http://claymore.github.com/blog/2008/07/13/context-menu-for-column-headers-of-net-listview</id>
    <content type="html"><![CDATA[<p><code>ListView</code> doesn't provide <code>ColumnHeaderMouseClick</code> event so I had to find a workaround to display context menu for column headers. There is a <a href="http://www.codeproject.com/Articles/23330/Handling-Right-Click-Events-in-ListView-Column-Hea" title="Handling Right-Click Events in ListView Column Headers">way</a> to do this by resorting to Windows API but my solution is easier.</p>

<!-- more -->


<p>Let's say we've got a <code>ListView</code> control called <code>contentsListView</code> and two menus: <code>generalContextMenu</code> and <code>headerContextMenu</code>. <code>generalContextMenu</code> should be displayed when user right-clicks on an item and headerContextMenu should be displayed when he clicks on a column header.</p>

<p>Set the list view's property <code>ContextMenuStrip</code> to <code>generalContextMenu</code>:</p>

<pre><code>contentListView.ContextMenuStrip = generalContextMenu;
</code></pre>

<p>Add handler for <code>Opening</code> event of <code>generalContextMenu</code>:</p>

<pre><code>generalContextMenuStrip.Opening += generalContextMenu_Opening;
</code></pre>

<p>I have played with debugger a bit and found out that <code>contentListView.GetItemAt</code> returns first visible item of the list even when we actually click on a column header. So, when we get some value this means we either clicked on an item or on a column header. Any list item is located below the header, so if the item <code>Position.Y</code> is less than <code>MousePosition.Y</code> then user clicked on a column header.</p>

<p>Here is the code for the handler:</p>

<p>```c#
private void generalContextMenu_Opening(object sender, CancelEventArgs e)
{</p>

<pre><code>Point pt = contentListView.PointToClient(new Point(MousePosition.X, MousePosition.Y));
ListViewItem item = contentListView.GetItemAt(pt.X, pt.Y);

// Not an item or a column header
if (item == null)
{
    e.Cancel = true;
    return;
}

// Is it a column header?
if (item.Position.Y &gt; pt.Y)
{
    e.Cancel = true;
    headerContextMenu.Show(MousePosition);
}
</code></pre>

<p>}
```</p>
]]></content>
  </entry>
  
</feed>
